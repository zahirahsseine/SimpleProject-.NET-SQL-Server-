//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleApp.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="C_user", Namespace="http://schemas.datacontract.org/2004/07/DAL")]
    [System.SerializableAttribute()]
    public partial class C_user : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string pseudoUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idUser {
            get {
                return this.idUserField;
            }
            set {
                if ((this.idUserField.Equals(value) != true)) {
                    this.idUserField = value;
                    this.RaisePropertyChanged("idUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string passwordUser {
            get {
                return this.passwordUserField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordUserField, value) != true)) {
                    this.passwordUserField = value;
                    this.RaisePropertyChanged("passwordUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string pseudoUser {
            get {
                return this.pseudoUserField;
            }
            set {
                if ((object.ReferenceEquals(this.pseudoUserField, value) != true)) {
                    this.pseudoUserField = value;
                    this.RaisePropertyChanged("pseudoUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                if ((object.ReferenceEquals(this.userNameField, value) != true)) {
                    this.userNameField = value;
                    this.RaisePropertyChanged("userName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IServicewcf")]
    public interface IServicewcf {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicewcf/DoWork", ReplyAction="http://tempuri.org/IServicewcf/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicewcf/DoWork", ReplyAction="http://tempuri.org/IServicewcf/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicewcf/CheckConnection", ReplyAction="http://tempuri.org/IServicewcf/CheckConnectionResponse")]
        bool CheckConnection(string pseudo, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicewcf/CheckConnection", ReplyAction="http://tempuri.org/IServicewcf/CheckConnectionResponse")]
        System.Threading.Tasks.Task<bool> CheckConnectionAsync(string pseudo, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicewcf/AddUser", ReplyAction="http://tempuri.org/IServicewcf/AddUserResponse")]
        bool AddUser(ConsoleApp.ServiceReference1.C_user user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicewcf/AddUser", ReplyAction="http://tempuri.org/IServicewcf/AddUserResponse")]
        System.Threading.Tasks.Task<bool> AddUserAsync(ConsoleApp.ServiceReference1.C_user user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicewcf/ListUser", ReplyAction="http://tempuri.org/IServicewcf/ListUserResponse")]
        ConsoleApp.ServiceReference1.C_user[] ListUser();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicewcf/ListUser", ReplyAction="http://tempuri.org/IServicewcf/ListUserResponse")]
        System.Threading.Tasks.Task<ConsoleApp.ServiceReference1.C_user[]> ListUserAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicewcfChannel : ConsoleApp.ServiceReference1.IServicewcf, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicewcfClient : System.ServiceModel.ClientBase<ConsoleApp.ServiceReference1.IServicewcf>, ConsoleApp.ServiceReference1.IServicewcf {
        
        public ServicewcfClient() {
        }
        
        public ServicewcfClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicewcfClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicewcfClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicewcfClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public bool CheckConnection(string pseudo, string password) {
            return base.Channel.CheckConnection(pseudo, password);
        }
        
        public System.Threading.Tasks.Task<bool> CheckConnectionAsync(string pseudo, string password) {
            return base.Channel.CheckConnectionAsync(pseudo, password);
        }
        
        public bool AddUser(ConsoleApp.ServiceReference1.C_user user) {
            return base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task<bool> AddUserAsync(ConsoleApp.ServiceReference1.C_user user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public ConsoleApp.ServiceReference1.C_user[] ListUser() {
            return base.Channel.ListUser();
        }
        
        public System.Threading.Tasks.Task<ConsoleApp.ServiceReference1.C_user[]> ListUserAsync() {
            return base.Channel.ListUserAsync();
        }
    }
}
